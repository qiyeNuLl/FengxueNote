^ 为匹配输入字符串的开始位置。

[0-9]+匹配多个数字， [0-9] 匹配单个数字，+ 匹配一个或者多个。

abc$匹配字母 abc 并以 abc 结尾，$ 为匹配输入字符串的结束位置。

我们在写用户注册表单时，
只允许用户名包含字符、数字、下划线和连接字符(-)，
并设置用户名的长度
^[a-z0-9_-]{3,15}$

例如：
var str = "123abc";
var patt1 = /^[0-9]+abc$/;
document.write(str.match(patt1));
符合正则表达式返回：
123abc
不符合则返回null

runoo+b，可以匹配 runoob、runooob、runoooooob 等，
+ 号代表前面的字符必须至少出现一次（1次或多次）。

runoo*b，可以匹配 runob、runoob、runoooooob 等，
* 号代表前面的字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次）。

colou?r 可以匹配 color 或者 colour，
? 问号代表前面的字符最多只可以出现一次（0次、或1次）。

普通字符
[abc]匹配字符串中abc字母
[^ABC]匹配除abc字符串中的所有字母
.  匹配除（\n、\r）中的任何单个字符，相等于[^\n\r]
[\s\S]匹配所有,\s是匹配所有空白符，包括换行\S非空白符，不包括换行
\w 等价于[A-Za-z0-9_]匹配字母数字下划线

非打印字符



















1、/g 表示该表达式将用来在输入字符串中查找所有可能的匹配，返回的结果可以是多个。如果不加/g最多只会匹配一个
2、/i 表示匹配的时候不区分大小写，这个跟其它语言的正则用法相同
3、/m 表示多行匹配。什么是多行匹配呢？就是匹配换行符两端的潜在匹配。影响正则中的^$符号
4、/s 与/m相对，单行模式匹配。
5、/e 可执行模式，此为PHP专有参数，例如preg_replace函数。
6、/x 忽略空白模式。

\w 匹配字母或数字或下划线或汉字 等价于 '[^A-Za-z0-9_]'。

\s 匹配任意的空白符

\d 匹配数字

\b 匹配单词的开始或结束

^ 匹配字符串的开始

$ 匹配字符串的结束

\w能不能匹配汉字要视你的操作系统和你的应用环境而定





